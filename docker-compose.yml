version: '3.8'
services:
  dnsproxy:
    image: strm/dnsmasq:latest
    cap_add:
      - NET_ADMIN
    command: ["-k", "--log-facility=-", "--server=213.186.33.99"]
    ports:
      - "53:53/udp"
  web:
    build: .
    expose:
      - "80"
    volumes:
      - ./app:/app
      - ./logs:/logs
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    command: /bin/sh -c "python app.py >> /logs/web.log 2>&1"
    depends_on:
      - blacklist
  blacklist:
    build: ./blacklist
    volumes:
      - ./app/db:/db
      - ./logs:/logs
    expose:
      - "5001"
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    command: /bin/sh -c "python app.py >> /logs/blacklist.log 2>&1"
  sanitizer:
    build: ./sanitizer
    environment:
      - UPSTREAM_URL=http://web:80
      - SANITIZER_CONFIG=/etc/gatekeeper/config.yml
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - ./sanitizer/config.example.yml:/etc/gatekeeper/config.yml:ro
      - ./logs:/logs
    expose:
      - "8080"
    depends_on:
      - web
    command: /bin/sh -c "uvicorn app:app --host 0.0.0.0 --port 8080 >> /logs/sanitizer.log 2>&1"
  bunkerweb:
    image: bunkerity/bunkerweb:latest
    expose:
      - "8080"
    environment:
      - API_WHITELIST_IP=0.0.0.0/0
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - bw-data:/var/lib/bunkerweb
      - ./logs:/logs
    command: /bin/sh -c "chown -R 101:101 /var/lib/bunkerweb && /entrypoint.sh >> /logs/bunkerweb.log 2>&1"
    depends_on:
      - sanitizer
    networks:
      - default
      - bw-plugins
  bunkerweb-scheduler:
    image: bunkerity/bunkerweb-scheduler:latest
    environment:
      - BUNKERWEB_INSTANCES=bunkerweb
      - SERVER_NAME=${DOMAIN:-localhost}
      - USE_REVERSE_PROXY=yes
      - REVERSE_PROXY_URL=/
      - REVERSE_PROXY_HOST=http://sanitizer:8080
      - USE_DB=true
      - API_WHITELIST_IP=0.0.0.0/0
      - HTTP2=no
      - USE_MODSECURITY=no
      - USE_CORAZA=yes
      - CORAZA_API=http://bw-coraza:8080
      - USE_CLAMAV=yes
      - CLAMAV_HOST=clamav
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - bw-data:/data
      - ./logs:/logs
    depends_on:
      - bunkerweb
    networks:
      - default
      - bw-plugins
    command: /bin/sh -c "/entrypoint.sh >> /logs/bunkerweb-scheduler.log 2>&1"
  bunkerweb-ui:
    image: bunkerity/bunkerweb-ui:latest
    ports:
      - "8000:80"
    environment:
      - BUNKERWEB_URL=http://bunkerweb:8080
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - bw-data:/var/lib/bunkerweb
      - ./logs:/logs
    depends_on:
      - bunkerweb-scheduler
    command: /bin/sh -c "/entrypoint.sh >> /logs/bunkerweb-ui.log 2>&1"
  annoyingsite:
    build: ./annoyingsite
    expose:
      - "4000"
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - ./logs:/logs
    command: /bin/sh -c "npm start >> /logs/annoyingsite.log 2>&1"
  gateway:
    build: ./gateway
    ports:
      - "80:80"
    environment:
      - BUNKER_URL=http://bunkerweb:8080
      - ANNOY_URL=http://annoyingsite:4000
      - BANNED_IPS_FILE=/banned/banned_ips.list
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - ./banned:/banned
      - ./logs:/logs
    depends_on:
      - bunkerweb
      - annoyingsite
    command: /bin/sh -c "gunicorn -b 0.0.0.0:80 app:app >> /logs/gateway.log 2>&1"
    networks:
      - default
      - bridged-net
  fail2ban:
    image: crazymax/fail2ban:latest
    volumes:
      - ./fail2ban:/etc/fail2ban
      - ./banned:/banned
      - ./logs:/logs
    depends_on:
      - gateway
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    command: /bin/sh -c "fail2ban-server -xf start >> /logs/fail2ban.log 2>&1"
  clamav:
    image: clamav/clamav:1.4
    volumes:
      - ./clamav-data:/var/lib/clamav
      - ./logs:/logs
    networks:
      - bw-plugins
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    command: /bin/sh -c "freshclam && clamd >> /logs/clamav.log 2>&1"
  bw-coraza:
    image: bunkerity/bunkerweb-coraza:latest
    networks:
      - bw-plugins
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - ./logs:/logs
    command: /bin/sh -c "/entrypoint.sh >> /logs/bw-coraza.log 2>&1"

  honeypot:
    build: ./honeypot
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: always
    environment:
      - CMD_NOT_FOUND_ACTION=${CMD_NOT_FOUND_ACTION}
    volumes:
      - ./logs:/logs
    # Run portspoof in the foreground so Docker can monitor it and restart if needed
    command: /bin/sh -c "portspoof -p 4444 >> /logs/honeypot.log 2>&1"

volumes:
  bw-data:
networks:
  default:
    driver: bridge
  bw-plugins:
    name: bw-plugins
  bridged-net:
    driver: bridge
